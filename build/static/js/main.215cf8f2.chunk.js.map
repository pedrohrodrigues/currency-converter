{"version":3,"sources":["components/CurrencyItem.js","App.js","index.js"],"names":["Currency","className","htmlFor","id","type","value","this","props","amount","onChange","onChangeAmount","onChangeFrom","currencyTypes","map","option","onChangeTo","onClick","onClickButton","conversion","React","Component","APP_ID","App","useState","setCurrencyTypes","apiError","setApiError","setAmount","from","setFrom","to","setTo","setConversion","conversionsHistory","setConversionHistory","a","convertURL","axios","get","data","rates","toFixed","currentResearch","length","shift","push","useEffect","console","log","Object","keys","loadCurrencyTypes","e","target","data-testid","h","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.215cf8f2.chunk.js","sourcesContent":["import React from 'react';\nimport '../assets/CurrencyItem.css';\nimport PropTypes from 'prop-types';\n\nexport class Currency extends React.Component{\n\n  render() {\n  return (\n    <div className=\"currency-container\">\n      <h1>Currency Converter</h1>\n      <div className=\"currency-converter\">\n          <div className=\"currency-converter__item\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input id=\"amount\" type=\"number\" value={this.props.amount} onChange={this.props.onChangeAmount}/>\n          </div>\n          <div className=\"currency-converter__item\">\n            <label htmlFor=\"from\">From</label>\n            <select id=\"from\" onChange={this.props.onChangeFrom}>\n              {this.props.currencyTypes.map(option =>(\n                <option key={option} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"currency-converter__item\">\n            <label htmlFor=\"to\">To</label>\n            <select id=\"to\" onChange={this.props.onChangeTo}>\n              {this.props.currencyTypes.map(option =>(\n                <option key={option} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"currency-converter__item currency-converter__item--button\">\n            <button id=\"convertButton\" onClick={this.props.onClickButton}>\n              Convert\n            </button>\n          </div>\n          <div className=\"conversion_result\">\n            {this.props.conversion}\n          </div>\n      </div>\n    </div>\n  );\n  }\n}\n\nCurrency.propTypes = {\n  currencyTypes: PropTypes.array.isRequired\n}","import React,{ useEffect,useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Currency } from './components/CurrencyItem';\n\n\nconst APP_ID = 'c48d9272f54091272549db54a5bc6051';\nconst CURRENCY_URL = 'http://api.exchangeratesapi.io/v1/latest?access_key='+APP_ID;\n\n\n\n\nfunction App() {\n  const [currencyTypes, setCurrencyTypes] = useState([]);\n  const [apiError, setApiError] = useState();\n  const [amount, setAmount] = useState(0)\n  const [from, setFrom] = useState()\n  const [to, setTo] = useState()\n  const [conversion, setConversion] = useState()\n  const [conversionsHistory, setConversionHistory] = useState([])\n\n  useEffect(() => {\n    const loadCurrencyTypes = async () => {\n    try {\n      setApiError('');\n      const { data } = await axios.get('/currencyRates');\n      console.log(data.rates[0]);\n      setFrom(Object.keys(data.rates)[0]);\n      setTo(Object.keys(data.rates)[0]);\n      setCurrencyTypes([...Object.keys(data.rates)])\n    } catch(error) {\n      setApiError('An error has occured with the api, please try again');\n  }\n}\nloadCurrencyTypes();\n}, []);\n  \n  async function convert() {\n    setApiError('');\n    const convertURL = `http://api.exchangeratesapi.io/v1/latest?from=${from}&to=${to}&access_key=${APP_ID}`;\n    try{\n      const { data } = await axios.get(convertURL);\n      const conversion = (amount * data.rates[to]).toFixed(2);\n      const currentResearch = conversionsHistory;\n      if(conversionsHistory.length > 10) {\n        currentResearch.shift();\n      }\n      currentResearch.push(`${amount} ${from} is equal to ${conversion} ${to}`);\n      setConversionHistory(currentResearch)\n      setConversion(conversion + ' ' + to);\n    } catch(error) {\n      setApiError('An error has occured with the api, please try again');\n    }\n  }\n\n  function handleChangeAmount(e) {\n    setAmount(e.target.value)\n  }\n\n  function handleChangeTo(e) {\n    setTo(e.target.value)\n  }\n\n  \n  function handleChangeFrom(e) {\n    setFrom(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <Currency \n        currencyTypes={currencyTypes} onChangeAmount={handleChangeAmount} onClickButton={convert} \n        amount={amount}\n        conversion={conversion}\n        onChangeTo={handleChangeTo}\n        onChangeFrom={handleChangeFrom}\n      />\n      <div data-testid=\"apiError\" id=\"apiError\">{apiError}</div>\n      <div>\n        Previous Researches      \n          <ul id=\"previousReseaches\">\n            {conversionsHistory.map(h => (\n              <li key={h}> {h} </li>\n            ))}\n          </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}